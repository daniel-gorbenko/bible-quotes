{"version":3,"sources":["components/input-hint/input-hint.js","components/quote/quote.js","api.js","components/app/app.js","index.js"],"names":["InputHint","props","react_default","a","createElement","className","type","value","hint","readOnly","onKeyDown","e","key","onUseHint","onEnter","onChange","Quote","title","list","map","verse","index","text","onClick","onRemove","base","api","Api","Object","classCallCheck","this","fetch","concat","then","response","json","bookAbbrev","_ref","topic","verseStart","verseEnd","App","_useState","useState","_useState2","slicedToArray","books","setBooks","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","query","setQuery","_useState7","_useState8","setHint","links","useMemo","url","split","linksLastIndex","length","link","matched","match","parseUrl","params","path","_useState9","_useState10","quotes","setQuotes","parseQuery","bookName","getAbbrevByName","filter","book","name","abbrev","getNameByAbbrev","composeTitle","_ref2","addQuoteApi","opt","getVerses","options","Promise","resolve","reject","state","lastQuote","getLastQuote","quote","prev","next","data","resolveState","onQuoteAdd","parsedQuery","changePath","isEmptyQuotesList","getFirstQuote","filteredQuotes","mapListBy","startItem","prop","fn","returnItems","currentItem","i","push","composeUrl","assign","history","join","useEffect","getBooks","sortedData","sort","reduce","loadQuotesFromLinks","input_hint_input_hint","preventDefault","pattern","RegExp","l","test","setSimilarHint","target","id","components_quote_quote","slice","indexOf","onQuoteRemove","html2canvas","document","getElementById","canvas","download","href","toDataURL","click","ReactDOM","render","react_router_dom","react_router","component"],"mappings":"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","file":"static/js/main.53c4817d.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nimport './input-hint.css';\n\nconst InputHint = (props) => {\n  const onKeyPress = (e) => {\n    if(e.key === 'Tab') {\n      props.onUseHint(e);\n    }\n\n    if(e.key === 'Enter') {\n      props.onEnter(e);\n    }\n  };\n\n  return (\n    <div className=\"input-hint\">\n      <input className=\"form-control\" type=\"text\" value={props.hint} readOnly />\n      <input onKeyDown={onKeyPress} onChange={props.onChange} className=\"form-control\" type=\"text\" value={props.value} />\n    </div>\n  );\n};\n\nexport default InputHint;\n","import React from 'react';\n\nimport './quote.css';\n\nconst Quote = (props) => {\n  return (\n    <div className=\"quote app__content-quotes-item\">\n      <div className=\"quote__title\">{props.title}</div>\n\n      <div className=\"quote__list\">\n        {props.list.map((verse, index) => {\n          return (\n            <div key={index} className=\"quote__verse\">\n              <div className=\"quote__verse-number\">{verse.index}</div>\n              <div className=\"quote__verse-text\">{verse.text}</div>\n            </div>\n          );\n        })}\n      </div>\n\n      <div className=\"quote__actions\">\n        <button onClick={(e) => {props.onRemove(e)}} className=\"btn btn-sm btn-danger\">Удалить</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Quote;\n","const base = 'https://bible-quotes-api2.herokuapp.com';\n\nclass Api {\n  constructor() {\n\n  }\n\n  getBooks() {\n    return fetch(`${base}/books`)\n      .then((response) => {\n        return response.json();\n      });\n  }\n\n  getVerses({bookAbbrev, topic, verseStart, verseEnd}) {\n    return fetch(`${base}/books/${bookAbbrev}/${topic}/${verseStart}-${verseEnd}`)\n      .then((response) => {\n        return response.json();\n      });\n  }\n}\n\nexport default new Api();\n","import React, { useState, useEffect, useMemo } from 'react';\nimport html2canvas from 'html2canvas';\n\nimport InputHint from '../input-hint/input-hint';\nimport Quote from '../quote/quote';\n\nimport api from '../../api';\n\nimport './app.scss';\n\n// PATH FORMAT:\n// STARTED FROM \"/\" and DELIMETED BY \";\" PATTERN:\n// /(\\w+)\\((\\d+)\\:(\\d+)-(\\d+)\\)/\n// EXAMPLE:\n// /foo(1:2-3);bar(1:2-3);\n\nconst App = (props) => {\n  const [books, setBooks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState('От Матфея 5:2-3');\n  const [hint, setHint] = useState(query);\n  const links = useMemo(() => {\n    return parseUrl(props.match.params.path);\n  }, []);\n  const [quotes, setQuotes] = useState([]);\n\n  const saveAsImage = () => {\n    html2canvas(document.getElementById('content-for-image'))\n      .then((canvas) => {\n          var link = document.createElement('a');\n\n          link.download = 'bible-quotes.png';\n          link.href = canvas.toDataURL(\"image/png\");\n\n          link.click();\n      });\n  };\n\n  function parseQuery(query) {\n    const pattern = /((\\d?[а-яА-Я]*\\s)?[а-яА-Я]+)\\s+(\\d+)\\:(\\d+)\\-(\\d+)/;\n\n    const matched = query.match(pattern);\n\n    return {\n      bookName: matched[1],\n      topic: matched[3],\n      verseStart: matched[4],\n      verseEnd: matched[5],\n    };\n  }\n\n  function match(url) {\n    const pattern = /^(\\w+)\\((\\d+)\\:(\\d+)-(\\d+)\\)/;\n\n    return url.match(pattern);\n  }\n\n  function parseUrl(url) {\n    const emptyArray = [];\n\n    if(!url) return emptyArray;\n\n    const links = url.split(';');\n    const linksLastIndex = links.length - 1;\n\n    if(links[linksLastIndex] === '') {\n      delete links[linksLastIndex];\n    }\n\n    return links.map(link => {\n      const matched = match(link);\n\n      if(matched === null) return null;\n\n      return {\n        bookAbbrev: matched[1],\n        topic: matched[2],\n        verseStart: matched[3],\n        verseEnd: matched[4]\n      };\n    });\n  }\n\n  const getAbbrevByName = (bookName) => {\n    return books.filter(book => {\n      return book.name === bookName;\n    })[0].abbrev;\n  };\n\n  const getNameByAbbrev = (bookAbbrev, books) => {\n    return books.filter(book => {\n      return book.abbrev === bookAbbrev;\n    })[0].name;\n  };\n\n  const setSimilarHint = (query) => {\n    const pattern = new RegExp(`^${query}`);\n    let hint = query;\n\n    for(let i = 0, l = books.length; i < l; i++) {\n      if(pattern.test(books[i].name)) {\n        hint = books[i].name;\n        break;\n      }\n    }\n\n    setHint(hint);\n  };\n\n  const onInputChange = (e) => {\n    setSimilarHint(e.target.value);\n    setQuery(e.target.value);\n  }\n\n  const composeUrl = ({bookAbbrev, topic, verseStart, verseEnd}) => {\n    return `${bookAbbrev}(${topic}:${verseStart}-${verseEnd})`;\n  };\n\n  const composeTitle = ({bookName, topic, verseStart, verseEnd}) => {\n    return `${bookName} ${topic}:${verseStart}-${verseEnd}`;\n  };\n\n  const addQuoteApi = (opt) => {\n    return api.getVerses(opt.options)\n      .then((response) => {\n        return new Promise((resolve, reject) => {\n          setQuotes(state => {\n            const lastQuote = getLastQuote(state);\n            const quote = {title: opt.title, prev: lastQuote, next: null,\n              list: response.data\n            };\n\n            if(lastQuote !== null) {\n               lastQuote.next = quote;\n            }\n\n            setIsLoading(false);\n\n            const resolveState = state.concat(quote);\n\n            resolve(resolveState);\n\n            return resolveState;\n          })\n        });\n      });\n  };\n\n  const loadQuotesFromLinks = (links, books) => {\n    setIsLoading(true);\n\n    const calls = links.reduce((prev, link) => {\n      return prev.then(() => {\n        return addQuoteApi({options: link, title: composeTitle(\n          Object.assign({}, link, {bookName: getNameByAbbrev(link.bookAbbrev, books)})\n        )});\n      })\n    }, Promise.resolve());\n\n    calls.then(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const onQuoteAdd = (data) => {\n    setIsLoading(true);\n\n    const parsedQuery = parseQuery(query);\n    const options = {\n      bookAbbrev: getAbbrevByName(parsedQuery.bookName),\n      topic: parsedQuery.topic,\n      verseStart: parsedQuery.verseStart,\n      verseEnd: parsedQuery.verseEnd\n    };\n\n    addQuoteApi({options: options, title: query})\n      .then((quotes) => {\n        changePath(quotes);\n      });\n  }\n\n  const isEmptyQuotesList = quotes.length === 0;\n\n  const useHint = (e) => {\n    e.preventDefault();\n    setQuery(hint);\n  };\n\n  const onQuoteRemove = (quote) => {\n    setIsLoading(true);\n\n    setQuotes(state => {\n      if(quote.prev !== null) {\n        quote.prev.next = quote.next;\n      }\n\n      if(quote.next !== null) {\n        quote.next.prev = quote.prev;\n      }\n\n      const quotes = [].concat(\n        state.slice(0, state.indexOf(quote)),\n        state.slice(state.indexOf(quote) + 1)\n      );\n\n      changePath(quotes);\n      setIsLoading(false);\n\n      return quotes;\n    });\n\n  };\n\n  const getFirstQuote = (quotes) => {\n    const filteredQuotes = quotes.filter((quote) => {\n      return quote.prev === null;\n    });\n\n    return (filteredQuotes.length === 1) ? filteredQuotes[0] : null;\n  };\n\n  const getLastQuote = (quotes) => {\n    const filteredQuotes = quotes.filter((quote) => {\n      return quote.next === null;\n    });\n\n    return (filteredQuotes.length === 1) ? filteredQuotes[0] : null;\n  };\n\n  const mapListBy = (startItem, prop, fn) => {\n    if(startItem === null) return [];\n\n    const returnItems = [];\n    let currentItem = startItem;\n\n    for(let i = 0; currentItem !== null; i++) {\n      returnItems.push(fn(currentItem, i));\n\n      currentItem = currentItem[prop];\n    }\n\n    return returnItems;\n  };\n\n  const changePath = (quotes) => {\n    const links = mapListBy(getFirstQuote(quotes), 'next', (quote, index) => {\n      const parsedQuery = parseQuery(quote.title);\n\n      return composeUrl(Object.assign({}, parseQuery(quote.title), {\n        bookAbbrev: getAbbrevByName(parsedQuery.bookName)\n      }));\n    });\n\n    props.history.push(`/${links.join(';')}`);\n  };\n\n  useEffect(() => {\n    api.getBooks()\n      .then((response) => {\n        return new Promise((resolve, reject) => {\n          setBooks(books => {\n            setIsLoading(false);\n\n            const sortedData = response.data.sort();\n            resolve(sortedData);\n\n            return sortedData;\n          });\n        });\n      })\n      .then((books) => {\n        loadQuotesFromLinks(links, books);\n      })\n\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__header\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <InputHint hint={hint} value={query} onUseHint={useHint} onEnter={onQuoteAdd} onChange={onInputChange}/>\n            </div>\n            <div className=\"col-auto\">\n              <button className=\"btn btn-primary\" onClick={onQuoteAdd}>Добавить</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"content-for-image\" className=\"app__content\">\n        <div className={`app__content-empty ${(!isEmptyQuotesList || isLoading) ? 'hidden' : ''}`}>\n         <div>Вы не добавили ни одной цитаты</div>\n        </div>\n\n        <div className={`app__content-loading ${!isLoading ? 'hidden' : ''}`}>\n          <div>Загрузка ...</div>\n        </div>\n\n        <div>\n          <div className={`app__content-title ${(isEmptyQuotesList || isLoading) ? 'hidden' : ''}`} >\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col\"><h2>Синодальный перевод</h2></div>\n            </div>\n          </div>\n        </div>\n\n        <div className={`app__content-quotes ${(isEmptyQuotesList || isLoading) ? 'hidden' : ''}`}>\n          {mapListBy(getFirstQuote(quotes), 'next', (quote, index) => {\n            return <Quote onRemove={(e) => onQuoteRemove(quote)} key={index} {...quote} />;\n          })}\n        </div>\n        </div>\n      </div>\n\n      <div className=\"app__footer\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <button className=\"btn btn-success btn-block\" onClick={saveAsImage}>Сохранить как изображение</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n// <!-- <div className=\"app__content-empty\">\n//   Вы не добавили ни одной цитаты\n// </div> -->\n\n// <!-- <div className=\"app__content-loading\">\n//  Загрузка ...\n// </div> -->\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport App from './components/app/app';\n\nconst Index = (props) => {\n  return (\n    <Router>\n      <Route path=\"/:path?\" component={App}></Route>\n    </Router>\n  );\n};\n\nReactDOM.render(<Index />, document.getElementById('root'));\n\n\n      // <Switch>\n        // <Route path=\"/:book\\(:topic\\::verseStart-:verseEnd\\);\" component={App}></Route>\n        // <Route component={() => <h1>404 страница</h1>}></Route>\n      // </Switch>\n"],"sourceRoot":""}